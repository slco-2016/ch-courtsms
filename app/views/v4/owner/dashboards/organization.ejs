<% include ../../partials/ownerFrameTop %>

<!-- Load in addition CSS -->
<link rel="stylesheet" type="text/css" href="/static/css/v4_ownerDashboard.css">

<div class="leftBar">
  <div class="departments">
    <div class="department">
      <div class="subject showAll">
        <a href="/dashboard/overview">Show for all departments</a>
      </div>
    </div>
    <% departments.forEach(function (department) { %>
      <a href="/dashboard/overview?departmentID=<%= department.department_id %>">
        <div class="department <% if (departmentFilterID == Number(department.department_id)) { %>selected<% } %>">
          <div class="subject">
            <%= department.name %>
          </div>
          <div class="date">
            <div class="day">Created on <%= moment.tz(department.updated, local_tz).format("DD/MM/YY") %></div>
          </div>
        </div>
      </a>
    <% }) %>
  </div>
</div>


<div class="rightContent">

  <div class="chart">
    <div class="title">Yearly Activity Log</div>
    <div class="graphic" id="overallGraph"></div>
  </div>
  <div class="chart">
    <div class="title">Previous 24 Hours' User Activity</div>
    <div class="loading"><i class="fa fa-spinner fa-pulse fa-3x fa-fw" aria-hidden="true"></i></div>
    <div class="graphic" id="userActivity"></div>
  </div>

</div>


<link rel="stylesheet" type="text/css" href="/components/c3/c3.min.css">
<script src="/components/d3/d3.min.js"></script>
<script src="/components/c3/c3.min.js"></script>

<script type="text/javascript">
  try { adjustDivs(); } catch (e) { console.log(e); }
  $(window).resize(adjustDivs);
  $(document).ready(function () {
    var keenQueryClient = new Keen({
      projectId: "5750a91433e4063ccd5b6c7e",
      readKey: "a70db21e3f6527c10ee23f2697714bf883783b6018b8f3fd27d94bf0b0d9eb9cb26a22d69709dff266866c526ad0e9e845c82dd5393b417d99c2ef7712d979a960e9247806dc09231e9ff7880ab2772cfa1b41d9900de385db8d5942d4d337bd"
    });
    Keen.ready(function () {
      var keenQuery = new Keen.Query("sum", {
        eventCollection: "pagedurations",
        groupBy: [ "user.first", "user.last", "user.department", "user.cmid" ],
        targetProperty: "duration",
        timeframe: "this_2_days",
        timezone: "UTC"
      });
      keenQueryClient.run(keenQuery, function (err, res){
        if (!err) {
          buildUserActivityChart(res.result); 
          $("#userActivity").parent().find(".loading").hide();
        }
      });
    });
  });

  function adjustDivs () {
    $(".leftBar").height($(window).height() - 92);
    $(".rightContent").height($(window).height() - 92);
  };

  // Utility to facilitate adding of days
  Date.prototype.addDays = function (days) {
    var dat = new Date(this.valueOf())
    dat.setDate(dat.getDate() + days);
    return dat;
  }

  function getDatesArray (startDate, stopDate) {
    var dateArray = new Array();
    var currentDate = startDate;
    while (currentDate <= stopDate) {
        dateArray.push(moment(new Date(currentDate)).format("YYYY-MM-DD"));
        currentDate = currentDate.addDays(1);
    }
    return dateArray;
  }

  var departmentFilterID = <%= JSON.stringify(departmentFilterID) %>;
  var countsByWeek = <%- JSON.stringify(countsByWeek) %>;
  var countsByDay = <%- JSON.stringify(countsByDay) %>;
  buildPerformanceChart(countsByWeek, countsByDay);

  function buildPerformanceChart (countsByWeek, countsByDay) {
    var keysWeek = countsByWeek.map( function (count) { return count.time_period; });
    var keysDay  = countsByDay.map(  function (count) { return count.time_period; });
    var valsWeek = countsByWeek.map( function (count) { return Number(count.message_count); });
    var valsDay  = countsByDay.map(  function (count) { return Number(count.message_count); });

    var firstDay = new Date(keysDay[0]);
    var lastDay = new Date(keysDay[keysDay.length - 1]);
    var newKeysDay = getDatesArray(firstDay, lastDay);
    var newValsDay = [];
    newKeysDay.forEach(function (day) {
      var i = keysDay.indexOf(day);
      if (i > -1) newValsDay.push(valsDay[i]);
      else newValsDay.push(0);
    });

    c3.generate({
      data: {
        xs:{
            "Weekly Activity": "x1",
            "Daily Activity":  "x2"
        },
        columns: [
            ["x1"].concat(keysWeek),
            ["x2"].concat(newKeysDay),
            ["Weekly Activity"].concat(valsWeek),
            ["Daily Activity"].concat(newValsDay)
        ],
        types: {"Weekly Activity": "area", "Daily Activity": "area"},
        colors: {
            "Weekly Activity": "#FFC966",
            "Daily Activity": "#FF6700"
        }
      },
      legend: { hide: true },
      axis: { x: { type: "timeseries", tick: { format: "%m/%d" } } },
      padding: { right: 0, top: 20, bottom: 0 },
      size: { width: 720, height: 230 },
      grid: { y: { show: false }, x: { show: false } },
      bindto: "#overallGraph"
    });
  };

  function buildUserActivityChart(users) {
    users = users.filter(function (ea) {
      var f = ea["user.first"] !== "" && ea["user.first"] !== "Test Account" && ea["user.first"] !== "Kuan";
      var l = ea["user.last"] !== "";
      if (departmentFilterID) {
        return ((departmentFilterID == ea["user.department"]) && (f && l))
      } else {
        return (f && l);
      }
    }).map(function (ea) {
      ea["User Activity"] = Math.ceil((ea.result/(1000*60*60))*100)/100; 
      ea.name = [ea["user.last"], ea["user.first"]].join(", ");
      return ea;
    });
    var height = Math.max(users.length * 20, 100);
    c3.generate({
      data: {
        json: users,
        keys: {
          x: "name",
          value: ["User Activity"]
        },
        type: "bar",
        color: function (color, d) { return "#3F69B6"; }
      },
      axis: {
        rotated: true,
        x: { type: "category" }
      },
      size: { width: 720, height: height },
      bindto: "#userActivity"
    });
  };


</script>

<% include ../../partials/hubFrameBottom %>